generator client {
  provider        = "prisma-client-js"
  output          = "../generated/prisma"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id           String       @id @unique @default(uuid())
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  deletedAt    DateTime?
  //
  email        String?      @unique
  name         String?
  phone        String?
  addr_country addr_Land?   @default(DE)
  addr_city    String?
  addr_zip     String?
  addr_street  String?
  addr_line1   String?
  addr_line2   String?
  orders       Order[]
  customerType CustomerType
}

model Order {
  id          String     @id @default(uuid())
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  deletedAt   DateTime?
  //
  seq         Int        @default(autoincrement())
  orderNumber String     @default(dbgenerated()) @db.VarChar(8)
  customer    Customer?  @relation(fields: [customerId], references: [id])
  customerId  String?
  positions   Position[]

  generatedFromComplaint Complaint? @relation("ComplaintToOrder")
}

model Position {
  id                String            @id @unique @default(uuid())
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  deletedAt         DateTime?
  //
  order             Order             @relation(fields: [orderId], references: [id])
  orderId           String
  complaints        Complaint[]
  standardProductId String?
  productionOrders  ProductionOrder[]
  //
  pos_number        Int
  description       String?
  Status            POSITION_STATUS   @default(IN_PROGRESS)
  amount            Int
  name              String
  color             String?
  shirtSize         String?
  productCategory   String
  design            String
  typ               String[]
}

model ProductionOrder {
  id                     String                  @id @default(uuid())
  createdAt              DateTime                @default(now())
  updatedAt              DateTime                @updatedAt
  deletedAt              DateTime?
  //
  position               Position                @relation(fields: [positionId], references: [id])
  positionId             String
  amount                 Int
  designUrl              String
  orderType              String
  dyeingNecessary        Boolean
  materialId             Int
  productTemplate        Json // <-- JSON-Feld fÃ¼r das Template
  Status                 PRODUCTION_ORDER_STATUS
  productionorder_number Int
}

model StandardProduct {
  id                 String    @id @default(uuid())
  deletedAt          DateTime?
  //
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  name               String
  color              String?
  shirtSize          String?
  productCategory    String
  minAmount          Int
  currentStock       Int       @default(0)
  amountInProduction Int       @default(0)
  typ                String[]
}

model Complaint {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  position   Position @relation(fields: [positionId], references: [id])
  positionId String

  newOrderId String? @unique
  newOrder   Order?  @relation("ComplaintToOrder", fields: [newOrderId], references: [id])

  ComplaintReason ComplaintReason
  ComplaintKind   ComplaintKind
  createNewOrder  Boolean
}

enum POSITION_STATUS {
  OPEN
  IN_PROGRESS
  READY_FOR_PICKUP
  READY_FOR_SHIPMENT
  OUTSOURCING_REQUESTED
  READY_FOR_INSPECTION
  INSPECTED
  COMPLETED
  CANCELLED
}

enum PRODUCTION_ORDER_STATUS {
  CANCELLED
  ORDER_RECEIVED
  AUTHORISED
  DYEING
  PRINTING
  COMPLETED
}

enum ComplaintReason {
  WRONG_SIZE
  WRONG_COLOR
  PRINT_INCORRECT
  PRINT_OFF_CENTER
  DAMAGED_ITEM
  STAINED
  LATE_DELIVERY
  WRONG_PRODUCT
  MISSING_ITEM
  BAD_QUALITY
  NOT_AS_DESCRIBED
  CANCELLATION
  OTHER
}

enum CustomerType {
  WEBSHOP
  BUSINESS
}

enum ShirtSize {
  S
  M
  L
  XL
}

enum ComplaintKind {
  INTERN
  EXTERN
}

enum PosLogSource {
  PROD
  MAWI
  VV
  WEBSHOP
}

enum addr_Land {
  DE
}
